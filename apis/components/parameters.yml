#
# All parameters are captured here.
#
# Parameters tend to be re-usable, so it's worthwhile capturing here rather than
# documenting them inline of path definitions.
#

orgIdParam:
  in: path
  name: org_id
  description: The ID of the HighBond instance.
  required: true
  schema:
    type: string
    example: 1
resourceIdParam: # A convenient parameter that'll reduce a ton of duplications.
  in: path
  name: id
  description: The ID of the requested resource.
  required: true
  schema:
    type: string
    example: 9999
EncodedUid:
  in: path
  name: encoded_uid
  description: |
    The IDs of the parent resource (project or framework) and user, in the `parent_resource_id:user_uid` format, which then must be encoded into Base64.

    For example, if the `parent_resource_id` is `11955` and the `user_uid` is `yvqdNCtv8TeM47WQtzau`, you would encode `11955:yvqdNCtv8TeM47WQtzau` into Base64. The result is `MTE5NTU6eXZxZE5DdHY4VGVNNDdXUXR6YXU=`, which you would use as the `encoded_uid`.
  required: true
  schema:
    type: string
    example: MTE5NTU6eXZxZE5DdHY4VGVNNDdXUXR6YXU=
uidPathParam:
  name: uid
  description: The UID of the user.
  schema:
    type: string
    example: yvqdNCtv8TeM47WQtzau
  in: path
  required: true

##################################
# Asset Type specific parameters
##################################
assetTypeIdParam:
  in: path
  name: asset_type_id
  description: The ID of the asset type.
  required: true
  schema:
    type: string
    example: 1
recordTypeIdParam:
  in: path
  name: record_type_id
  description: The ID of the asset record type.
  required: true
  schema:
    type: string
    example: 1
parentIdParam:
  in: path
  name: parent_id
  description: The ID of the parent in an asset record type parent-child relationship. May be for an asset type or a root asset record type.
  required: true
  schema:
    type: string
    example: 111
childIdParam:
  in: path
  name: child_id
  description: The ID of the child in an asset record type parent-child relationship. Can only be for an asset record type.
  required: true
  schema:
    type: string
    example: 222
assetTypesIncludeParam:
  in: query
  name: include
  description: Include information about the associated resources.
  required: false
  schema:
    type: string
    example: attribute_types
    enum:
      - attribute_types
filterByCategories:
  in: query
  name: filter[category]
  description: Filter the response to only include resources that belong to the given list of categories, separated by comma.
  required: false
  schema:
    type: string
    example: assets,risks
filterByWorkflowIds:
  in: query
  name: workflow_id
  description: Filter the response to only include resources that associate with the given list of workflow IDs, separated by comma.
  required: false
  schema:
    type: string
    example: 296f9069-4e4a-42bf-ba8a-e372e8f9e724,768cd1bc-d8af-4429-9aa0-8a4b477de42b
fieldName:
  in: query
  name: filter[field_name]
  description: An attribute type name to filter by. Response only includes matching resources.
  required: false
  schema:
    type: string
    example: LoremIpsum
filterName:
  in: query
  name: filter[name]
  description: Filter by name.  Response will include partial matches and ignore case.
  required: false
  schema:
    type: string
    example: LoremIpsum

##################################
# Assets specific parameters
##################################
assetIdParam:
  in: path
  name: asset_id
  description: The ID of the asset.
  required: true
  schema:
    type: string
    example: 1

recordIdParam:
  in: path
  name: record_id
  description: The ID of the asset record.
  required: true
  schema:
    type: string
    example: 1

eventIdParam:
  in: path
  name: event_id
  description: The ID of the event
  required: true
  schema:
    type: string
    example: '415dc769-3e49-4501-a2fd-80908bea7a32'

assetTypeSparseFieldsetParams:
  in: query
  name: fields[asset_types]
  description: Requesting the API to return only the specified fields.
    For more information, see <a href="#section/Making-requests">Making requests</a>
  required: false
  schema:
    type: string
    example: asset_attributes

assetSparseFieldsetParams:
  in: query
  name: fields[asset_attributes]
  description: Requesting the API to return only the specified fields.
    For more information, see <a href="#section/Making-requests">Making requests</a>
  required: false
  schema:
    type: string
    example: name,metadata.created_at

recordSparseFieldsetParams:
  in: query
  name: fields[record_attributes]
  description: Requesting the API to return only the specified fields.
    For more information, see <a href="#section/Making-requests">Making requests</a>
  required: false
  schema:
    type: string
    example: name,metadata.created_at

resourceSortParam:
  in: query
  name: sort
  description: Orders the resulting resources by the given fields.
    Metadata can be sorted with the 'metadata.' prefix.
    Sorts ascending by default, prefix with - to sort descending.
    Can only sort up to two fields at a time.
  required: false
  schema:
    type: string
    example: -vendor_name,metadata.id

resourceSearchParam:
  in: query
  name: filter[query]
  description: Requesting the API to return only resources with fields
    that contain the search query string (any fields that have a string value).
    Case-insensitive.
  required: false
  schema:
    type: string
    example: LoremIpsum

relationshipFieldName:
  in: query
  name: field_name
  description: The field name of the ad hoc attribute type you want to target. All relationships in the response will be related to this field name.
  required: true
  schema:
    type: string
    example: my_ad_hoc_field_name

relationshipObjectTypeId:
  in: query
  name: target_object_type_id
  description: The ID of the target asset type or asset record type to which this asset or record is linked.
  required: true
  schema:
    type: string
    example: '2423727'

relationshipObjectId:
  in: query
  name: target_object_id
  description: The ID of the target asset or asset record to which this asset or record is linked.
  required: true
  schema:
    type: string
    example: '1569286277732072'

relationshipLabelFieldName:
  in: query
  name: label_field_name
  description: The field name of the label from which the target asset or asset record is linked.
  required: true
  schema:
    type: string
    example: my_ad_hoc_attribute::causes

pageSizeAssetsAttributesParam:
  in: query
  name: page[size]
  description: The number of items returned per page. Default is 50. Maximum is 500.
  required: false
  schema:
    type: string
    example: 25

pageSizeAssetsAttributeTypesParam:
  in: query
  name: page[size]
  description: The number of items returned per page. Default is 50. Maximum is 1000.
  required: false
  schema:
    type: string
    example: 25

##################################
# Toolkits specific parameters
##################################frameworkIdParam:
toolkitIdParam:
  in: path
  name: id
  description: The ID of the toolkit.
  required: true
  schema:
    type: string
    example: my-first-toolkit
toolkitActionParam:
  in: path
  name: toolkit_action
  description: Request the API to return toolkit resources information for respective action.
  required: true
  schema:
    type: string
    example: info, apply, destroy

##################################
# Launchpad Users specific parameters
##################################
listUsersTypeFilterParam:
  in: query
  name: filter[user_type]
  description: Requesting the API to filter Users by their type.
    Can only be one of the following types `"user"`, `"system"`, and `"root"`
  required: false
  schema:
    type: string
    example: user

listUsersSearchParam:
  in: query
  name: filter[query]
  description:
    Requesting the API to return only Users matching their name or email if it contains the search query string.
    Case-insensitive.
  required: false
  schema:
    type: string
    example: diligent.com
groupIdPathParam:
  name: group_id
  description: The ID of the group.
  schema:
    type: string
    example: 10
  in: path
  required: true

pageNumberParam:
  in: query
  name: page[number]
  description: The page number of records to return. Default is 1.
  required: false
  schema:
    type: string
    example: 2
    