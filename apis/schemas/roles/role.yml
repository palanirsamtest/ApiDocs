RoleUID: &RoleUID
  type: string
  description: Unique identifier for the role.
  example: '5fe686da-282a-11eb-adc1-0242ac120002'

RoleType: &RoleType
  type: string
  description: The classification of the object (`"roles"`).
  example: roles

PlatformRolePermissions: &PlatformRolePermissions
  organization:
    type: object
    description: Object with key of organization ID and value of permission mapping. Can only be on roleType of platform.
    additionalProperties:
      type: object
      description: A key value mapping where the key is a permission, and the value is true if the permission is on, and false otherwise.
      properties:
        $ref: ./generated/role_permissions.yml#/Organization

UserRolePermissions: &UserRolePermissions
  asset_type:
    type: object
    description: Object with key of asset type ID and value of a permission mapping. Use key `*` to associate permissions with all asset types. Can only be on roleType of user.
    additionalProperties:
      type: object
      description: A key value mapping where the key is a permission, and the value is true if the permission is on, and false otherwise.
      properties:
        $ref: ./generated/role_permissions.yml#/AssetType

# TODO: use oneOf if it becomes supported in generated Go sdk
RolePermissions: &RolePermissions
  permissions:
    type: object
    properties:
      <<: *UserRolePermissions
      <<: *PlatformRolePermissions

RoleBaseAttributes: &RoleBaseAttributes
  name:
    type: string
    maxLength: 100
    description: Admin viewable name for the role. Must be unique within the Organization.
    example: platform_admin
  display_name:
    type: string
    maxLength: 100
    description: User viewable name for the role. Can be the same as the name.
    example: Platform Admin
  description:
    type: string
    maxLength: 500
    description: Role Description
    example: Administrators for the platform.

RoleFullAttributes: &RoleFullAttributes
  <<: *RoleBaseAttributes
  role_type:
    type: string
    enum: [platform, user]
    description: Type of Role, defined on creation, cannot be updated.
    example: platform
  created_at:
    type: string
    description: The timestamp identifying when the role was created.
    example: '2019-02-09T13:17:26Z'
    format: date-time
  created_by:
    type: string
    description: UID of the creating user.
    example: 3NQ6XzAUxqJMnAQ7n4KF
  updated_at:
    type: string
    description: The timestamp identifying when the role was last updated.
    example: '2019-02-09T13:17:26Z'
    format: date-time
  updated_by:
    type: string
    description: UID of the most recent updating user.
    example: 3NQ6XzAUxqJMnAQ7n4KF
  org_id:
    type: string
    minLength: 1
    description: The ID of the organization this role is for.
    example: '123456'

Role: &Role
  type: object
  required:
    - id
    - type
    - attributes
  properties: &RoleProperties
    id: *RoleUID
    type: *RoleType
    attributes:
      type: object
      properties:
        <<: *RolePermissions
        <<: *RoleFullAttributes

RoleWithAssignees: &RoleWithAssignees
  type: object
  required:
    - id
    - type
    - attributes
  properties:
    <<: *RoleProperties
    relationships:
      type: object
      description: IDs and types of assignees associated with the role. Only present when queried with `?include=assignees`
      required:
        - assignees
      properties:
        assignees:
          type: array
          items:
            $ref: ./assignees.yml#/AssigneeType

CreateRoleRequest:
  type: object
  description: The parameters required to create a new role.
  required:
    - data
  properties:
    data:
      type: object
      description: The data associated with the new role.
      required:
        - type
        - attributes
      properties:
        type: *RoleType
        attributes:
          type: object
          description: The attributes associated with the new role.
          required:
            - name
            - display_name
          properties:
            role_type:
              type: string
              enum: [platform, user]
              description: Type of Role, defined on creation, cannot be updated.
              example: platform
            <<: *RoleBaseAttributes

UpdateRoleRequest:
  type: object
  description: The parameters required to update a new role.
  required:
    - data
  properties:
    data:
      type: object
      description: The data associated with the updated role.
      required:
        - type
        - attributes
      properties:
        type: *RoleType
        attributes:
          type: object
          description: The attributes associated with the updated role.
          properties:
            <<: *RoleBaseAttributes
            <<: *RolePermissions

GetRoleResponse:
  type: object
  description: The data associated with the resource.
  required:
    - data
  properties:
    data: *Role

MultipleRolesResponse:
  type: object
  description: The data associated with the resource.
  required:
    - data
  properties:
    data:
      type: array
      description: An array of the roles associated with the requested org.
      items: *RoleWithAssignees
    included:
      type: array
      description: The data for the assignees referenced in the `relationships` object.
      items:
        $ref: ./assignees.yml#/Assignee

UpdateRoleResponse:
  type: object
  description: The data associated with the resource.
  required:
    - data
  properties:
    data: *Role

DeleteRoleResponse:
  type: object
  description: The data associated with the resource.
  required:
    - data
  properties:
    data:
      type: object
      required:
        - id
        - type
        - attributes
      properties:
        id: *RoleUID
        type: *RoleType
        attributes:
          type: object
          properties:
            <<: *RoleFullAttributes
