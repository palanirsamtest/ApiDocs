MetricUpdatableAttributes: &MetricUpdatableAttributes
  type: object
  description: The attributes associated with the resource.
  required:
    - name
    - field_name
    - time_field_name
    - func
    - interval
  properties: &baseAttribute
    name:
      type: string
      description: The name of the metric.
      maxLength: 255
      example: My first Metric
    base_color:
      type: string
      description: Sets the color of the metric when the calculation does not exceed the threshold.
      example: '#3F3D3C'
    func:
      type: string
      description: |
        Defines the aggregate function to use in the metric calculation.

        Valid functions: `count`, `positives`, `negatives`, `zeros`, `total`, `average`, `lowest`, `highest`, `standard_deviation`, `uniques`, `blanks`, `percent-of`
      example: percent-of
    interval:
      type: string
      description: |
        Summarizes the metric into a period.

        Valid periods: `day`, `month`, `quarter`, `year`
      example: month
    metric_type:
      type: string
      description: Tags the metric as an indicator type, such as a key performance indicator or key risk indicator.
      maxLength: 255
      example: kpi
    show_sparkline:
      type: boolean
      description: Shows (`true`) or hides (`false`) the trend of key indicator performance from the earliest calculation period to the current period for users that view the metric.
      example: true
    view_thresholds:
      type: boolean
      description: Shows (`true`) or hides (`false`) active trigger thresholds on the sparkline.
      example: false
    field_name:
      type: string
      description: The underlying name of the column in the table used for the metric calculation. `field_name` must be unique within a table and follow the <a href="https://help.highbond.com/helpdocs/highbond/en-us/Default.htm#cshid=rm-import-export-results" target="_blank">column naming requirements</a>.
      example: balance
    time_field_name:
      type: string
      description: A column in the table with a `date`, `datetime` or `time` data type.
      example: created_at
    config:
      type: string
      description: A JSON string storing the metric format configuration.
      example: |
        {
          "field_format_map": { },
          "conditional_formats_map": { }
        }
    filter_config:
      type: string
      description: A JSON string storing the metric filter configuration.
      example: |
        {
          "filtersOpen": true,
          "params": { }
        }
    func_argument:
      type: string
      description: |
        A JSON string storing the arguments of the Metric function.

        Valid operators:

        `>`, `<`, `>=`, `<=`, `==`, `!=`, `between`, `not-between`, `begins-with`, `contains`, `does-not-contain`, `is-blank`, `is-not-blank`
      example: |
        {
          "operator": "is-blank"
        }
MetricFullAttributes: &MetricFullAttributes
  type: object
  description: The attributes associated with the resource.
  properties:
    <<: *baseAttribute
    created_at:
      type: string
      description: The date the metric was created.
      example: '2019-02-09T13:17:26Z'
      format: date-time
    updated_at:
      type: string
      description: The date the metric was updated.
      example: '2019-03-18T22:02:05Z'
      format: date-time
Metric: &Metric
  type: object
  description: The data associated with the resource.
  required:
    - id
    - type
    - attributes
    - relationships
  properties:
    id:
      type: string
      description: The ID of the metric.
      example: '5001'
    type:
      type: string
      description: The classification of the object (`"metrics"`).
      example: metrics
    attributes: *MetricFullAttributes
    relationships:
      type: object
      description: The relationships associated with the resource.
      properties:
        table:
          $ref: '../../components/schemas.yml#/RelationshipObject'
      example:
        table:
          data:
            id: '300'
            type: tables
CreateMetricPayload:
  type: object
  description: The data associated with the resource.
  required:
    - data
  properties:
    data:
      type: object
      description: The data associated with the resource.
      required:
        - type
        - attributes
      properties: &basePayload
        type:
          type: string
          description: The classification of the object (`"metrics"`).
          example: metrics
        attributes: *MetricUpdatableAttributes
UpdateMetricPayload:
  type: object
  description: The data associated with the resource.
  required:
    - data
  properties:
    data:
      type: object
      description: The data associated with the resource.
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
          description: The ID of the metric.
          example: '5001'
        <<: *basePayload
SingleMetricResponse:
  type: object
  description: The data associated with the resource.
  required:
    - data
  properties:
    data: *Metric
